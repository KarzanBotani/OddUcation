{"version":3,"sources":["/home/ygeman/Projects/git/OddUcation/pages/index.js"],"names":["PostIndex","state","errorMessage","loading","postSummaries","postsCount","ownerName","factory","methods","call","setState","postAddresses","allSum","ownerNames","props","posts","addr","p","Post","getPostSummary","o","getProfile","n","push","console","log","Group","Content","Header","Meta","Description","q","i","web3","utils","hexToUtf8","float","display","flexDirection","alignItems","err","Row","Column","width","backgroundColor","renderPosts","getDeployedPosts","getUsers","usrsAddrs"],"mappings":"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","file":"4.2d5f14b14bd6fdf25aa7.hot-update.js","sourcesContent":["import React, { Component } from 'react';\nimport { Advertisement, Container, Button, Card, Divider, Grid, Table, Icon, Image, Message } from 'semantic-ui-react';\nimport factory from '../ethereum/factory'; // import factory instance\nimport Post from '../ethereum/post';\nimport Layout from '../components/general/Layout';\nimport web3 from '../ethereum/web3';\nimport { Link } from '../routes';\n\n// class components allow you to use lifecycle components like: componentDidMount\nclass PostIndex extends Component {\n\n  state = {\n    errorMessage: '',\n    loading: false,\n    postSummaries: [],\n    postsCount: '',\n    ownerName: ''\n  };\n\n  // getInitialProps is required by next. next wants to  get the data without having to render the component.\n  // so it calls the getInitialProps function, with static.\n  // getInitialProps is similar to componentDidMount.\n  // by doing this, 'posts' can be referenced anywhere, because it is now a 'prop'\n  static async getInitialProps() {\n    const posts = await factory.methods.getDeployedPosts().call();\n    const usrsAddrs = await factory.methods.getUsers().call();\n    return { posts, usrsAddrs };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({ postsCount: await factory.methods.postsCount().call() }); \n\n      let postAddresses = [];\n      let allSum = [];\n      let ownerNames = [];\n      let postsCount;\n\n      for (let addr of this.props.posts) {\n        let p = Post(addr);\n        let o = await p.methods.getPostSummary().call();\n        let n = await factory.methods.getProfile(o[0]).call();\n\n        postAddresses.push(addr);\n        allSum.push(o);\n        ownerNames.push(n[1]);\n      }\n\n      await this.setState({ \n        postSummaries: { postAddresses, allSum, ownerNames }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderPosts() {\n    try {\n      const { Group, Content, Header, Meta, Description } = Card;\n      const { postSummaries, postsCount } = this.state;\n      let q = [];\n\n      for (let i = 0; i < postsCount; i++) {\n        q[i] =\n          <Link route={`/posts/${postSummaries.postAddresses[i]}`}>\n            <Card>\n              <Image src='https://react.semantic-ui.com/assets/images/wireframe/image.png' />\n              <Content>\n                <Header>{web3.utils.hexToUtf8(postSummaries.allSum[i][1])}</Header>\n                <Meta>\n                  <span style={{ float: 'right' }}>{postSummaries.allSum[i][8]} views</span>\n                  <span>by {web3.utils.hexToUtf8(postSummaries.ownerNames[i])}</span>\n                </Meta>\n                <Content extra>\n                  <span style={{ float: 'right' }}>up: {postSummaries.allSum[i][10]} / down: {postSummaries.allSum[i][11]}</span>\n                  <span>uploaded: {postSummaries.allSum[i][6]}</span>\n                </Content>\n              </Content>\n            </Card>\n          </Link>\n        ;\n      }\n\n      return (\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>{q[0]}</Grid.Column>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>{q[1]}</Grid.Column>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>{q[2]}</Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>{q[3]}</Grid.Column>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>{q[4]}</Grid.Column>\n            <Grid.Column style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>{q[5]}</Grid.Column>\n          </Grid.Row>\n        </Grid>\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const { Row, Column } = Grid;\n\n    return (\n      <Layout>\n        <Advertisement style={{ width: '100%', backgroundColor: 'red' }} unit='large leaderboard' test='Splash text' />\n        <Container>\n          {this.renderPosts()}\n        </Container>\n      </Layout>\n    )\n  }\n\n}\n\nexport default PostIndex;\n\n\n// WEBPACK FOOTER //\n// ./pages/index.js"],"sourceRoot":""}